import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id 'java'
	id "com.github.johnrengelman.shadow" version "6.0.0"
}

group 'me.jishuna.challengeme'
version '1.0.0'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.dmulloy2.net/nexus/repository/public/" }
    }
    
     shadowJar {
        archiveFileName = "${project.name}.jar"
        destinationDirectory = file("../temp/")
    }
    
     build {
        dependsOn shadowJar
    }
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.dmulloy2.net/nexus/repository/public/" }
}

dependencies {
  	implementation fileTree("temp")
  
    compileOnly group: 'org.spigotmc', name: 'spigot', version: '1.16.5-R0.1-SNAPSHOT'
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.6.0";
    implementation group: 'me.jishuna.jishunacommonlib', name: 'JishunaCommonLib', version: '1.0.0'
}

jar {
    from {
        for (File file : new File("temp").listFiles()) {
            zipTree(file)
        }
    }
}

shadowJar {
  	dependsOn(jar)
  	
  	delete fileTree('./target/') {
        exclude archiveName
    }
  
    setArchiveName('ChallengeMe-' + this.version + '.jar')                                              
    relocate 'me.jishuna.commonlib', 'me.jishuna.challengeme.libs.jishunacommonlib' 
    destinationDirectory = file("./target/")                                   
}

clean {
    delete file('./temp/')
}

build {
    dependsOn shadowJar
    dependsOn clean
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

shadowJar.shouldRunAfter build
build.shouldRunAfter subprojects.build